Top 10 selling products

SELECT * FROM(SELECT STOCKCODE ,DESCRIPTION, SUM(QUANTITY) AS TOTAL_SOLD
FROM ECOMMERCE_DATA
GROUP BY STOCKCODE, DESCRIPTION 
ORDER BY TOTAL_SOLD DESC)
WHERE ROWNUM <=10;

Total Revenue Per Customer
SELECT CUSTOMERID,SUM(QUANTITY * UNITPRICE) AS Total_Revenue
FROM ECOMMERCE_DATA 
WHERE CUSTOMERID IS NOT NULL
GROUP  BY CUSTOMERID
ORDER BY Total_Revenue DESC;

Best-Selling Products
SELECT * FROM(SELECT STOCKCODE, DESCRIPTION, SUM(QUANTITY) AS Total_Sold
FROM ECOMMERCE_DATA
GROUP BY STOCKCODE, DESCRIPTION
ORDER BY Total_Sold DESC)
WHERE ROWNUM <=10;

Monthly Sales Trend
SELECT TO_CHAR(INVOICEDATE, 'YYYY-MM') AS Month,
   SUM(QUANTITY * UNITPRICE) AS Monthly_Revenue
FROM ECOMMERCE_DATA
GROUP BY TO_CHAR(InvoiceDate, 'YYYY-MM')
ORDER BY MONTH;

Customer Purchase Frequency
SELECT* FROM(SELECT CUSTOMERID,COUNT(DISTINCT INVOICENO)AS PURCHASE_FREQUENCY
FROM ECOMMERCE_DATA
WHERE CUSTOMERID IS NOT NULL
GROUP BY CUSTOMERID
ORDER BY PURCHASE_FREQUENCY DESC)
WHERE ROWNUM <=10

CUSTOMER SEGMENTATION BASED ON SPENDING

SELECT CUSTOMERID,
  SUM(QUANTITY * UNITPRICE)AS Total_spent,
  CASE
  WHEN SUM(QUANTITY * UNITPRICE) > 5000 THEN 'High-Value'
  WHEN SUM(QUANTITY * UNITPRICE) BETWEEN 1000 AND 5000 THEN 'Medium-Value'
  ELSE 'Low_Value'
  END AS Customer_Segment
  FROM ECOMMERCE_DATA
  WHERE CUSTOMERID IS NOT NULL
  GROUP BY CUSTOMERID
  ORDER BY Total_spent DESC;
  
Most Frequently Returned Products
SELECT *
FROM (
    SELECT STOCKCODE, DESCRIPTION,
ABS(SUM(QUANTITY)) AS Total_Returned
    FROM ECOMMERCE_DATA
    WHERE QUANTITY < 0
    GROUP BY STOCKCODE, DESCRIPTION
    ORDER BY Total_Returned DESC
)
WHERE ROWNUM <=10;


Average Order Value
SELECT AVG(OrderValue) AS AVG_Order_Value
     FROM(SELECT INVOICENO, SUM(Quantity * UnitPrice) AS OrderValue
     FROM COMMERCE_DATA
     GROUP BY INVOICENO
);

TOP 10 SALES DAYS
SELECT *FROM(
    SELECT TO_CHAR(INVOICEDATE,'YYYY-MM-DD') AS Sales_Day,
           SUM(QUANTITY * UNITPRICE) AS Total_Sales
   FROM ECOMMERCE_DATA
   GROUP BY TO_CHAR(INVOICEDATE,'YYYY-MM-DD')
   ORDER BY Total_Sales DESC
)
WHERE ROWNUM <=10;

  
